{
  "name": "Angular-material-keyboard",
  "tagline": "Onscreen virtual keyboard for Angular (https://angularjs.org/) using Material (https://material.angularjs.org/) and the Angular Virtual Keyboard by the-darc (https://github.com/the-darc/angular-virtual-keyboard) based on GreyWyvern VKI (http://www.greywyvern.com/code/javascript/keyboard).",
  "body": "# angular-material-keyboard\r\nOnscreen virtual keyboard for [Angular](https://angularjs.org/) using [Angular Material](https://material.angularjs.org/) and the [Angular Virtual Keyboard by the-darc](https://github.com/the-darc/angular-virtual-keyboard) based on [GreyWyvern VKI](http://www.greywyvern.com/code/javascript/keyboard).\r\n\r\n## demo\r\nCheckout the [demo.html](https://cdn.rawgit.com/davidenke/angular-material-keyboard/0.0.4/demo.html)\r\n\r\n## usage\r\n* download or clone the latest release, or use your preferred packet manager\r\n* add the javascript and css files to your project:\r\n```html\r\n  <script src=\"angular-material-keyboard/dist/mdKeyboard.min.js\"></script>\r\n  <link rel=\"stylesheet\" href=\"angular-material-keyboard/dist/mdKeyboard.css\">\r\n  <link rel=\"stylesheet\" href=\"//fonts.googleapis.com/css?family=Material+Icons\">\r\n```\r\n* register module:\r\n```javascript\r\n'use strict';\r\n\r\nangular\r\n    .module('myApp', [\r\n        'ngAria',\r\n        'ngAnimate',\r\n        'ngMaterial',\r\n        'material.components.keyboard'\r\n    ]);\r\n```\r\n* use as directive\r\n```html\r\n<form name=\"myForm\">\r\n  <md-input-container>\r\n      <input type=\"text\"\r\n             use-keyboard=\"Deutsch\"\r\n             ng-model=\"myModel\">\r\n  </md-input-container>\r\n</form>\r\n```\r\n\r\n## configure\r\nUse the `mdKeyboardProvider` to set your default layout or to add custom layouts:\r\n```javascript\r\n'use strict';\r\n\r\nangular\r\n  .module('myApp')\r\n  .config(function ($mdKeyboardProvider) {\r\n  \r\n    // add layout for number fields\r\n    $mdKeyboardProvider.addLayout('Numbers', {\r\n      'name': 'Numbers', 'keys': [\r\n            [['7', '7'], ['8', '8'], ['9', '9'], ['Bksp', 'Bksp']],\r\n            [['4', '4'], ['5', '5'], ['6', '6'], ['-', '-']],\r\n            [['1', '1'], ['2', '2'], ['3', '3'], ['+', '+']],\r\n            [['0', '0'], ['Spacer'], [','], ['Enter', 'Enter']]\r\n      ], 'lang': ['de']\r\n    });\r\n\r\n    // default layout is german\r\n    $mdKeyboardProvider.defaultLayout('Deutsch');\r\n  });\r\n```\r\nThe first entry in each 'key' array is the default char. The second is used when pressing 'shift' or 'caps lock', the third when 'alt' is rpessed.\r\nYou can use the `spacer` key to provide a gap in the layout.\r\n\r\nThe `$mdKeyboardProvider` has the following methods:\r\n\r\n`getLayout(layout:string):object` will give you the corresponding layout\r\n\r\n`getCurrentLayout():string` will give you the current used layout\r\n\r\n`getLayouts():array` returns all registered layouts\r\n\r\n`defaultLayout(layout:string):void` tells the directive which layout to use as default\r\n\r\n`useLayout(layout:string):void` tells the directive which layout to use\r\n\r\n`addLayout(layout:string, keys:array):void` expects the name of a new layout to register along an 'keys' array\r\n\r\n`isVisible():boolean` returns wether the keyboard is currently visible or not\r\n\r\n## build\r\n* install node.js (I recomend to use [nvm](https://github.com/creationix/nvm))\r\n* get dependencies: `$ npm install && bower install`\r\n* build with gulp task: `$ gulp build`\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}